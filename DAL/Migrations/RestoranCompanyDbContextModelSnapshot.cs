// <auto-generated />
using System;
using DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(RestoranCompanyDbContext))]
    partial class RestoranCompanyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ENTITIES.Entity.Masa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("MasaAciklama")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MasaAd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Masalar");
                });

            modelBuilder.Entity("ENTITIES.Entity.OdemeSekil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("OdemeSekilAd")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("OdemeSekiller");
                });

            modelBuilder.Entity("ENTITIES.Entity.Siparis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Eposta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("IndririmTutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("KategoriID")
                        .HasColumnType("int");

                    b.Property<int?>("MasaId")
                        .HasColumnType("int");

                    b.Property<int?>("OdemeSekilId")
                        .HasColumnType("int");

                    b.Property<string>("SiparisAciklama")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SiparisAdres")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SiparisSekilId")
                        .HasColumnType("int");

                    b.Property<string>("SiparisTelNo")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("SiparisVerenAd")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SiparisVerenSoyad")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("SiparisZamani")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ToplamTutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MasaId");

                    b.HasIndex("OdemeSekilId");

                    b.HasIndex("SiparisSekilId");

                    b.ToTable("Siparisler");
                });

            modelBuilder.Entity("ENTITIES.Entity.SiparisSekil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SiparisSekilAd")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SiparisSekiller");
                });

            modelBuilder.Entity("ENTITIES.Entity.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<int>("UrunAdet")
                        .HasColumnType("int");

                    b.Property<decimal>("UrunFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("RestoranCompany.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adi")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Adresi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Createdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Epostasi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Soyadi")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("TelNoSu")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RestoranCompany.Entity.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("KategoriAciklamasi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("SiparisUrun", b =>
                {
                    b.Property<int>("SiparislerId")
                        .HasColumnType("int");

                    b.Property<int>("UrunlerId")
                        .HasColumnType("int");

                    b.HasKey("SiparislerId", "UrunlerId");

                    b.HasIndex("UrunlerId");

                    b.ToTable("SiparisUrun");
                });

            modelBuilder.Entity("ENTITIES.Entity.Siparis", b =>
                {
                    b.HasOne("ENTITIES.Entity.Masa", "Masa")
                        .WithMany("Siparisler")
                        .HasForeignKey("MasaId");

                    b.HasOne("ENTITIES.Entity.OdemeSekil", "OdemeSekil")
                        .WithMany("Siparisler")
                        .HasForeignKey("OdemeSekilId");

                    b.HasOne("ENTITIES.Entity.SiparisSekil", "SiparisSekil")
                        .WithMany("Siparsler")
                        .HasForeignKey("SiparisSekilId");

                    b.Navigation("Masa");

                    b.Navigation("OdemeSekil");

                    b.Navigation("SiparisSekil");
                });

            modelBuilder.Entity("ENTITIES.Entity.Urun", b =>
                {
                    b.HasOne("RestoranCompany.Entity.Kategori", "Kategori")
                        .WithMany("Urunler")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("SiparisUrun", b =>
                {
                    b.HasOne("ENTITIES.Entity.Siparis", null)
                        .WithMany()
                        .HasForeignKey("SiparislerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTITIES.Entity.Urun", null)
                        .WithMany()
                        .HasForeignKey("UrunlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ENTITIES.Entity.Masa", b =>
                {
                    b.Navigation("Siparisler");
                });

            modelBuilder.Entity("ENTITIES.Entity.OdemeSekil", b =>
                {
                    b.Navigation("Siparisler");
                });

            modelBuilder.Entity("ENTITIES.Entity.SiparisSekil", b =>
                {
                    b.Navigation("Siparsler");
                });

            modelBuilder.Entity("RestoranCompany.Entity.Kategori", b =>
                {
                    b.Navigation("Urunler");
                });
#pragma warning restore 612, 618
        }
    }
}
